plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'ru.cryptopro.support.spring'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
        exceptionFormat "FULL"
        showExceptions true
        showCauses true
        showStackTraces true
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println()
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
    jvmArgs("-XX:+EnableDynamicAgentLoading")
    reports {
        junitXml.required = false
    }
    doLast {
        println()
        println("HTML report generated: " + reports.html.entryPoint)
    }
}


tasks.withType(JavaCompile).configureEach {
    options.deprecation = true
}
